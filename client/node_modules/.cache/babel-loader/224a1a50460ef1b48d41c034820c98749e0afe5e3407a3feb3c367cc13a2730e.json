{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentVideo: null,\n  loading: false,\n  error: false\n};\nexport const videoSlice = createSlice({\n  name: \"video\",\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      state.loading = true;\n    },\n    fetchSuccess: (state, action) => {\n      state.loading = false;\n      state.currentVideo = action.payload;\n    },\n    fetchFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(state.currentUser.subscribedUsers.findIndex(channelId => channelId === action.payload), 1);\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  subscription\n} = videoSlice.actions;\nexport default videoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentVideo","loading","error","videoSlice","name","reducers","fetchStart","state","fetchSuccess","action","payload","fetchFailure","logout","currentUser","subscription","subscribedUsers","includes","splice","findIndex","channelId","push","loginStart","loginSuccess","loginFailure","actions","reducer"],"sources":["/home/bakil/FS-Youtube-Clone/client/src/redux/videoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  currentVideo: null,\n  loading: false,\n  error: false,\n};\n\nexport const videoSlice = createSlice({\n  name: \"video\",\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.loading = true;\n    },\n    fetchSuccess: (state, action) => {\n      state.loading = false;\n      state.currentVideo = action.payload;\n    },\n    fetchFailure: (state) => {\n      state.loading = false;\n      state.error = true;\n    },\n    \n    logout: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(\n          state.currentUser.subscribedUsers.findIndex(\n            (channelId) => channelId === action.payload\n          ),\n          1\n        );\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout, subscription } =\n  videoSlice.actions;\n\nexport default videoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,YAAY,GAAGS,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDU,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACM,WAAW,GAAG,IAAI;MACxBN,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,KAAK;IACrB,CAAC;IACDY,YAAY,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC/B,IAAIF,KAAK,CAACM,WAAW,CAACE,eAAe,CAACC,QAAQ,CAACP,MAAM,CAACC,OAAO,CAAC,EAAE;QAC9DH,KAAK,CAACM,WAAW,CAACE,eAAe,CAACE,MAAM,CACtCV,KAAK,CAACM,WAAW,CAACE,eAAe,CAACG,SAAS,CACxCC,SAAS,IAAKA,SAAS,KAAKV,MAAM,CAACC,OACtC,CAAC,EACD,CACF,CAAC;MACH,CAAC,MAAM;QACLH,KAAK,CAACM,WAAW,CAACE,eAAe,CAACK,IAAI,CAACX,MAAM,CAACC,OAAO,CAAC;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEW,UAAU;EAAEC,YAAY;EAAEC,YAAY;EAAEX,MAAM;EAAEE;AAAa,CAAC,GAC3EX,UAAU,CAACqB,OAAO;AAEpB,eAAerB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}